 /// Kommentärer till kod

 /// Huvud Klass:  Program
 /// Programstruktur:   Program (Main)
 /// Metod 1: Console.WriteLine = Skriver meddelande till konsol. 
 /// Metod 2: Console.Write = Skriver utan nytt rad
 /// Metod 3: Console.ReadLine = Läser input från användare
 /// Variabler: håller i data av 18 typer >  firstName, lastName, price, amountPaid, change, billsAndCoinds, response, employeeName,personalNumber, storeLocation, employees, orders, customers, workload, employeeRating, storeRatingStar, workloadInCats, actionMessage. 
 /// Loop metod :  ett enkel while loop med if och else if, funktionalitet av beräkning.
 /// Matematiska operoner: Används för att göra beräkning av växel ex > 0   
 /// Flöde av program: continueTest1 
 /// Klass Random : Skapar data som visas i program
 /// Logiska funktion metoder: CalculaterOrders, CaLculatedEmployees, CalculatWorkload, CalculateEmployeeRatomg. CalculateEmplyeeRating, CalculateStoreRating

 /// Logik bakom beräkningar: 
 /// Betyg av medarbetare 1 star: Antal arbetsdagar < 5 
 /// Antal medarbetare med 2 star: Antal arbetsdagar = eller > 14 + 50 beställningar avslutade
 /// Antal medarbetare med 3 star: 100 beställningar
 /// Antal medarbetare med 4 star: 150 beställningar
 /// Antal medarbetare med 5 star: 200 beställningar
 /// Antal medarbetare med 1 star: 
 /// Antal medarbetare med 2 star: 
 /// Antal medarbetare med 3 star: 
 /// Antal medarbetare med 4 star: 
 /// Antal medarbetare med 5 star: 
 /// Betyg butik 1 star: Rapporterad olycka eller mindre än 3 meddarbetare eller 3 medarbetare med 1 star
 /// Betyg butik 2 star: Inga olyckor 2 meddarbetare med 1 star Inga olyckor under 3 månader
 /// Betyg butik 3 star: Mindre än 150 beställningar eller 2 medarbetare med 1 star som jobbar längre än 14 dagar, Inga olyckor under 6 månader
 /// Betyg butik 4 star: Mindre än 200 kunder, mindre än 4 medarbetare, Inga olyckor under 8 månader
 /// Betyg butik 5 star: Har 250 eller fler beställningar samt minst 3 medarbetare med 5 star, Inga olyckor under 12 månader
 /// Om belastning grad är över 1 katt, ge anställda ett 50% rabatt på köp av 2 varor.
 /// Om belastning drad är över 2 katter, anställ nytt vikarie på 50%
 /// Om belastning grad är över 3 katter, anställ nytt vikarie på 75%
 /// Om belastning grad är över 4 katter, anställ nytt medarbetare på 100%
 /// 50 kunder i veckan graderas som 1 katt belastning
 /// 100 kunder i veckan graderas som 2 katt belastning
 /// 150 kunder i veckan graderas som 3 katt belastning
 /// 200 kunder i veckan graderas som 4 katt belastning
 /// 250 kunder i veckan graderas som 5 katt belastning
 /// 
 ///

using System;

class Program
{
    static void Main()
    {
        Console.WriteLine("_________________________");
        Console.WriteLine("C Sharp kurs");

        Console.Write("Ange ditt namn: ");
        string firstName = Console.ReadLine();

        Console.Write("Ange ditt efternamn: ");
        string lastName = Console.ReadLine();
        Console.WriteLine("_________________________");

        bool continueTest1 = true;

        while (continueTest1)
        {
            Console.WriteLine("Test 1: Kaffe Kassa Capurrchino");
            Console.WriteLine("_________________________");

            Console.Write("Ange total summa: ");
            decimal price = decimal.Parse(Console.ReadLine());

            Console.Write("Ange summa kontanter kund har betalt: ");
            decimal amountPaid = decimal.Parse(Console.ReadLine());

            decimal change = amountPaid - price;
            Console.WriteLine("Kontant tillbaka:");

            int[] billsAndCoins = { 200, 100, 50, 20, 10, 5, 1 };

            foreach (int billOrCoin in billsAndCoins)
            {
                int count = (int)(change / billOrCoin);
                if (count > 0)
                {
                    change -= count * billOrCoin;
                    string currencyName = (billOrCoin == 200) ? "2-hundralapp" :
                        (billOrCoin == 100) ? "hundralapp" :
                        (billOrCoin == 50) ? "femtiolapp" :
                        (billOrCoin == 20) ? "tjugo" :
                        (billOrCoin == 10) ? "tio" :
                        (billOrCoin == 5) ? "femkrona" :
                        "enkronor";

                    Console.WriteLine($"{count} stycken {currencyName}");
                }
            }

            Console.WriteLine("_________________________");
            Console.Write("Vidare till Test 2? (ja/nej): ");
            string response = Console.ReadLine().ToLower();
            if (response != "ja")
            {
                continueTest1 = true;
            }
            else
            {
                continueTest1 = false;
            }
        }

        Console.WriteLine("_________________________");
        Console.WriteLine("Test 2: Capurrchino");
        Console.WriteLine("_________________________");

        string employeeName, personalNumber, storeLocation;
        int customers, orders, employees, workload, employeeRating, storeRatingStar;

        Console.Write("Ange ditt namn: ");
        employeeName = Console.ReadLine();

        Console.Write("Ange ditt personal nummer: ");
        personalNumber = Console.ReadLine();

        Console.Write("Butik lokal: ");
        storeLocation = Console.ReadLine();

        Random random = new Random();
        customers = random.Next(50, 301);

        orders = CalculateOrders(customers);
        employees = CalculateEmployees(customers);
        workload = CalculateWorkload(employees);
        employeeRating = CalculateEmployeeRating(workload, employees);
        storeRatingStar = CalculateStoreRating(customers, employees, workload, employeeRating);

        int workloadInCats = (workload / 50) + 1;

        Console.WriteLine($"Antal kunder: {customers} vecka");
        Console.WriteLine($"Antal orders: {orders} vecka");
        Console.WriteLine($"Antal medarbetare: {employees}");
        Console.WriteLine($"Belastning grad: {workloadInCats} katt");
        Console.WriteLine($"Ditt betyg: {employeeRating} star");

        Console.WriteLine("_________________________");
        Console.WriteLine("Capurrchino");
        Console.WriteLine("Sammanfattning distikt/stad:");

        string actionMessage = "";
        if (storeRatingStar == 1)
        {
            actionMessage = "Shop needs improvement. Consider hiring more employees or improving safety measures.";
        }
        else if (storeRatingStar == 2)
        {
            actionMessage = "Shop is performing decently. Maintain current standards and monitor safety.";
        }
        else if (storeRatingStar == 3)
        {
            actionMessage = "Shop is doing well. Focus on improving order efficiency and safety records.";
        }
        else if (storeRatingStar == 4)
        {
            actionMessage = "Shop is excellent. Maintain current standards and explore ways to attract more customers.";
        }
        else if (storeRatingStar == 5)
        {
            actionMessage = "Shop is outstanding. Keep up the good work and focus on expanding your customer base.";
        }

        Console.WriteLine($"Butik betyg: {storeRatingStar} star");
        Console.WriteLine("To do: " + actionMessage);
        Console.WriteLine("_________________________");
    }

    static int CalculateOrders(int customers)
    {
        return customers * 2;
    }

    static int CalculateEmployees(int customers)
    {
        return customers / 30;
    }

    static int CalculateWorkload(int employees)
    {
        return employees * 5;
    }

    static int CalculateEmployeeRating(int workload, int employees)
    {
        return (workload > 20 && employees >= 5) ? 5 : 4;
    }

    static int CalculateStoreRating(int customers, int employees, int workload, int employeeRating)
    {
        return (customers > 100 && employees >= 4 && workload <= 20 && employeeRating == 5) ? 5 : 4;
    }
}
